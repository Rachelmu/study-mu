(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{378:function(e,t,a){"use strict";a.r(t);var r=a(42),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"css-面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-面试题"}},[e._v("#")]),e._v(" Css 面试题")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/woai3c/Front-end-basic-knowledge/blob/master/CSS.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("github"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"使用css-让一个div消失在视野中-发挥想象力"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用css-让一个div消失在视野中-发挥想象力"}},[e._v("#")]),e._v(" 使用css，让一个div消失在视野中，发挥想象力？")]),e._v(" "),a("h2",{attrs:{id:"请说明z-index的工作原理-适用范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请说明z-index的工作原理-适用范围"}},[e._v("#")]),e._v(" 请说明z-index的工作原理，适用范围？")]),e._v(" "),a("h2",{attrs:{id:"文档流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文档流"}},[e._v("#")]),e._v(" 文档流")]),e._v(" "),a("h2",{attrs:{id:"定位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定位"}},[e._v("#")]),e._v(" 定位")]),e._v(" "),a("h3",{attrs:{id:"border1px问题的形成原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#border1px问题的形成原因"}},[e._v("#")]),e._v(" border1px问题的形成原因")]),e._v(" "),a("h3",{attrs:{id:"产生原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#产生原因"}},[e._v("#")]),e._v(" 产生原因")]),e._v(" "),a("ul",[a("li",[e._v("设备像素比：dpr=window.devicePixelRatio，也就是设备的物理像素与逻辑像素的比值。像素比 = 物理像素 / css像素")]),e._v(" "),a("li",[e._v("在"),a("code",[e._v("retina")]),e._v("屏的手机上, "),a("code",[e._v("dpr")]),e._v("为"),a("code",[e._v("2")]),e._v("或"),a("code",[e._v("3")]),e._v("，"),a("code",[e._v("css")]),e._v("里写的"),a("code",[e._v("1px")]),e._v("宽度映射到物理像素上就有"),a("code",[e._v("2px")]),e._v("或"),a("code",[e._v("3px")]),e._v("宽度。")]),e._v(" "),a("li",[e._v("例如："),a("code",[e._v("iPhone6")]),e._v("的"),a("code",[e._v("dpr")]),e._v("为"),a("code",[e._v("2")]),e._v("，物理像素是"),a("code",[e._v("750")]),e._v("（x轴）,它的逻辑像素为"),a("code",[e._v("375")]),e._v("。也就是说，1个逻辑像素，在"),a("code",[e._v("x")]),e._v("轴和"),a("code",[e._v("y")]),e._v("轴方向，需要2个物理像素来显示，即：dpr=2时，表示1个CSS像素由4个物理像素点组成。")])]),e._v(" "),a("h4",{attrs:{id:"解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[e._v("#")]),e._v(" 解决方案")]),e._v(" "),a("h5",{attrs:{id:"_0-5px方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0-5px方案"}},[e._v("#")]),e._v(" 0.5px方案")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("在"),a("code",[e._v("IOS8+")]),e._v("，苹果系列都已经支持"),a("code",[e._v("0.5px")]),e._v("了，可以借助媒体查询来处理。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("/*这是css方式*/\n.border { border: 1px solid #999 }\n@media screen and (-webkit-min-device-pixel-ratio: 2) {\n    .border { border: 0.5px solid #999 }\n}\n/*ios dpr=2和dpr=3情况下border相差无几，下面代码可以省略*/\n@media screen and (-webkit-min-device-pixel-ratio: 3) {\n    .border { border: 0.333333px solid #999 }\n}\n")])])])]),e._v(" "),a("li",[a("p",[a("code",[e._v("IOS7")]),e._v("及以下和"),a("code",[e._v("Android")]),e._v("等其他系统里，"),a("code",[e._v("0.5px")]),e._v("将会被显示为"),a("code",[e._v("0px")]),e._v("。那么我们就需要想出办法解决，说实在一点就是找到"),a("code",[e._v("Hack")]),e._v("。")])]),e._v(" "),a("li",[a("p",[e._v("解决方案是通过"),a("code",[e._v("JavaScript")]),e._v("检测浏览器能否处理"),a("code",[e._v("0.5px")]),e._v("的边框，如果可以，给"),a("code",[e._v("html")]),e._v("标签元素添加个"),a("code",[e._v("class")]),e._v("。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("if (window.devicePixelRatio && devicePixelRatio >= 2) {\n  var testElem = document.createElement('div');\n  testElem.style.border = '.5px solid transparent';\n  document.body.appendChild(testElem);\n}\nif (testElem.offsetHeight == 1) {\n  document.querySelector('html').classList.add('hairlines');\n}\n  document.body.removeChild(testElem);\n}\n// 脚本应该放在body内，如果在里面运行，需要包装 $(document).ready(function() {})\n")])])])]),e._v(" "),a("li",[a("p",[e._v("然后，极细的边框样式就容易了")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("div {\n  border: 1px solid #bbb;\n}\n.hairlines div {\n  border-width: 0.5px;  \n}\n")])])])]),e._v(" "),a("li",[a("p",[e._v("优点：简单，不需要过多代码。")])]),e._v(" "),a("li",[a("p",[e._v("缺点：无法兼容安卓设备、 "),a("code",[e._v("iOS 7")]),e._v("及以下设备。")])])]),e._v(" "),a("h5",{attrs:{id:"伪类-transform"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#伪类-transform"}},[e._v("#")]),e._v(" 伪类+transform")]),e._v(" "),a("ul",[a("li",[e._v("原理：把原先元素的"),a("code",[e._v("border")]),e._v("去掉，然后利用"),a("code",[e._v(":before")]),e._v("或者"),a("code",[e._v(":after")]),e._v("重做"),a("code",[e._v("border")]),e._v("，并 "),a("code",[e._v("transform")]),e._v("的"),a("code",[e._v("scale")]),e._v("缩小一半，原先的元素相对定位，新做的"),a("code",[e._v("border")]),e._v("绝对定位。")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('/*手机端实现真正的一像素边框*/\n.border-1px, .border-bottom-1px, .border-top-1px, .border-left-1px, .border-right-1px {\n    position: relative;\n}\n\n/*线条颜色 黑色*/\n.border-1px::after, .border-bottom-1px::after, .border-top-1px::after, .border-left-1px::after, .border-right-1px::after {\n    background-color: #000;\n}\n\n/*底边边框一像素*/\n.border-bottom-1px::after {\n    content: "";\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    height: 1px;\n    transform-origin: 0 0;\n}\n\n/*上边边框一像素*/\n.border-top-1px::after {\n    content: "";\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 1px;\n    transform-origin: 0 0;\n}\n\n/*左边边框一像素*/\n.border-left-1px::after {\n    content: "";\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 1px;\n    height: 100%;\n    transform-origin: 0 0;\n}\n\n/*右边边框1像素*/\n.border-right-1px::after {\n    content: "";\n    box-sizing: border-box;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 1px;\n    height: 100%;\n    transform-origin: 0 0;\n}\n\n/*边框一像素*/\n.border-1px::after {\n    content: "";\n    box-sizing: border-box;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    border: 1px solid gray;\n}\n\n\n/*设备像素比*/\n/*显示屏最小dpr为2*/\n@media (-webkit-min-device-pixel-ratio: 2) {\n    .border-bottom-1px::after, .border-top-1px::after {\n        transform: scaleY(0.5);\n    }\n\n    .border-left-1px::after, .border-right-1px::after {\n        transform: scaleX(0.5);\n    }\n\n    .border-1px::after {\n        width: 200%;\n        height: 200%;\n        transform: scale(0.5);\n        transform-origin: 0 0;\n    }\n}\n\n/*设备像素比*/\n@media (-webkit-min-device-pixel-ratio: 3)  {\n    .border-bottom-1px::after, .border-top-1px::after {\n        transform: scaleY(0.333);\n    }\n\n    .border-left-1px::after, .border-right-1px::after {\n        transform: scaleX(0.333);\n    }\n\n    .border-1px::after {\n        width: 300%;\n        height: 300%;\n        transform: scale(0.333);\n        transform-origin: 0 0;\n    }\n}\n/*需要注意<input type="button">是没有:before, :after伪元素的*/\n')])])]),a("ul",[a("li",[e._v("优点：所有场景都能满足，支持圆角(伪类和本体类都需要加border-radius)。")]),e._v(" "),a("li",[e._v("缺点：代码量也很大，对于已经使用伪类的元素(例如clearfix)，可能需要多层嵌套。")])]),e._v(" "),a("h5",{attrs:{id:"viewport-rem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#viewport-rem"}},[e._v("#")]),e._v(" viewport + rem")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("同时通过设置对应"),a("code",[e._v("viewport")]),e._v("的"),a("code",[e._v("rem")]),e._v("基准值，这种方式就可以像以前一样轻松愉快的写1px了。")])]),e._v(" "),a("li",[a("p",[e._v("在"),a("code",[e._v("devicePixelRatio=2")]),e._v(" 时，设置"),a("code",[e._v("meta")]),e._v("：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<meta name="viewport" content="width=device-width,initial-scale=0.5, maximum-scale=0.5, minimum-scale=0.5, user-scalable=no">\n')])])])]),e._v(" "),a("li",[a("p",[e._v("在"),a("code",[e._v("devicePixelRatio=3")]),e._v(" 时，设置"),a("code",[e._v("meta")]),e._v("：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<meta name="viewport" content="width=device-width,initial-scale=0.3333333333333333, maximum-scale=0.3333333333333333, minimum-scale=0.3333333333333333, user-scalable=no">\n')])])])]),e._v(" "),a("li",[a("p",[e._v("验证")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<!DOCTYPE html>\n<html lang="en">\n<head>\n    <title>移动端1px问题</title>\n    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />\n    <meta name="viewport" id="WebViewport"\n        content="width=device-width,initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no" />\n    <style>\n        html {\n            font-size: 11px;\n        }\n        body {\n            padding: 1rem;\n        }\n        * {\n            padding: 0;\n            margin: 0;\n        }\n        .item {\n            padding: 1rem;\n            border-bottom: 1px solid gray;\n            font-size: 1.2rem;\n        }\n    </style>\n    <script>\n        var viewport = document.querySelector("meta[name=viewport]");\n        var dpr = window.devicePixelRatio || 1;\n        var scale = 1 / dpr;\n        //下面是根据设备dpr设置viewport\n        viewport.setAttribute(\n            "content", +\n            "width=device-width," +\n            "initial-scale=" +\n            scale +\n            ", maximum-scale=" +\n            scale +\n            ", minimum-scale=" +\n            scale +\n            ", user-scalable=no"\n        );\n\n        var docEl = document.documentElement;\n        var fontsize = 10 * (docEl.clientWidth / 320) + "px";\n        docEl.style.fontSize = fontsize;\n    <\/script>\n</head>\n<body>\n    <div class="item">border-bottom: 1px solid gray;</div>\n    <div class="item">border-bottom: 1px solid gray;</div>\n</body>\n</html>\n')])])])]),e._v(" "),a("li",[a("p",[e._v("优点：所有场景都能满足，一套代码，可以兼容基本所有布局。")])]),e._v(" "),a("li",[a("p",[e._v("缺点：老项目修改代价过大，只适用于新项目。")])])]),e._v(" "),a("h5",{attrs:{id:"border-image"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#border-image"}},[e._v("#")]),e._v(" border-image")]),e._v(" "),a("h5",{attrs:{id:"background-image"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#background-image"}},[e._v("#")]),e._v(" background-image")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(".background-image-1px {\n  background: url(../img/line.png) repeat-x left bottom;\n  background-size: 100% 1px;\n}\n")])])]),a("ul",[a("li",[e._v("优点：可以设置单条,多条边框，没有性能瓶颈的问题。")]),e._v(" "),a("li",[e._v("缺点：修改颜色麻烦, 需要替换图片；圆角需要特殊处理，并且边缘会模糊。")])]),e._v(" "),a("h5",{attrs:{id:"postcss-write-svg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#postcss-write-svg"}},[e._v("#")]),e._v(" postcss-write-svg")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("使用"),a("code",[e._v("border-image")]),e._v("每次都要去调整图片，总是需要成本的。基于上述的原因，我们可以借助于"),a("code",[e._v("PostCSS")]),e._v("的插件"),a("code",[e._v("postcss-write-svg")]),e._v("来帮助我们。如果你的项目中已经有使用"),a("code",[e._v("PostCSS")]),e._v("，那么只需要在项目中安装这个插件。然后在你的代码中使用：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("@svg 1px-border {\n    height: 2px;\n    @rect {\n      fill: var(--color, black);\n      width: 100%;\n      height: 50%;\n    }\n}\n.example {\n    border: 1px solid transparent;\n    border-image: svg(1px-border param(--color #00b1ff)) 2 2 stretch;\n }\n // 编辑出来\n .example {\n    border: 1px solid transparent;\n    border-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' height='2px'%3E%3Crect fill='%2300b1ff' width='100%25' height='50%25'/%3E%3C/svg%3E\")\n          2 2 stretch;\n  }\n")])])])])]),e._v(" "),a("h4",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("0.5px")]),e._v("，相信浏览器肯定是会慢慢支持的，目前而言，如果能用的话，可以"),a("code",[e._v("hack")]),e._v("一下。")]),e._v(" "),a("li",[e._v("对于老项目，建议采用"),a("code",[e._v("transform")]),e._v("+伪类。")]),e._v(" "),a("li",[e._v("新项目可以设置"),a("code",[e._v("viewport")]),e._v("的"),a("code",[e._v("scale")]),e._v("值，这个方法兼容性好。")]),e._v(" "),a("li",[a("code",[e._v("postcss-write-svg")]),e._v("简单易用，仅适合直线，圆角建议用"),a("code",[e._v("transform")]),e._v("+伪类实现。")])]),e._v(" "),a("h2",{attrs:{id:"如何使用一个div里面的文字垂直居中-且该文字的大小根据屏幕大小自适应"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何使用一个div里面的文字垂直居中-且该文字的大小根据屏幕大小自适应"}},[e._v("#")]),e._v(" 如何使用一个div里面的文字垂直居中，且该文字的大小根据屏幕大小自适应？")]),e._v(" "),a("h2",{attrs:{id:"考察盒子模型和-box-sizing-属性-判断元素的尺寸和颜色。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考察盒子模型和-box-sizing-属性-判断元素的尺寸和颜色。"}},[e._v("#")]),e._v(" 考察盒子模型和 "),a("code",[e._v("box-sizing")]),e._v(" 属性，判断元素的尺寸和颜色。")]),e._v(" "),a("h2",{attrs:{id:"垂直水平居中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#垂直水平居中"}},[e._v("#")]),e._v(" 垂直水平居中")]),e._v(" "),a("h2",{attrs:{id:"position有哪些属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#position有哪些属性"}},[e._v("#")]),e._v(" position有哪些属性")]),e._v(" "),a("h2",{attrs:{id:"less-sass它们的作用是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#less-sass它们的作用是什么"}},[e._v("#")]),e._v(" less,sass它们的作用是什么")]),e._v(" "),a("h2",{attrs:{id:"避免-css-全局污染。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#避免-css-全局污染。"}},[e._v("#")]),e._v(" 避免 css 全局污染。")]),e._v(" "),a("ul",[a("li",[e._v("我常用的 css modules")]),e._v(" "),a("li",[e._v("scoped")])]),e._v(" "),a("h2",{attrs:{id:"css-modules-的原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-modules-的原理"}},[e._v("#")]),e._v(" css modules 的原理")]),e._v(" "),a("ul",[a("li",[e._v("生成唯一的类名")])]),e._v(" "),a("h2",{attrs:{id:"有一个-a-标签-如何动态的决定他的样式。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有一个-a-标签-如何动态的决定他的样式。"}},[e._v("#")]),e._v(" 有一个 a 标签，如何动态的决定他的样式。")]),e._v(" "),a("ul",[a("li",[e._v("我说了先写几个 css，然后外部传一个前缀的方式。面试官问了都要这样吗？我说可以通过 context 的方式，就不需要每个组件都传了。")])]),e._v(" "),a("h2",{attrs:{id:"用css画一个扇形"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用css画一个扇形"}},[e._v("#")]),e._v(" 用css画一个扇形")]),e._v(" "),a("h2",{attrs:{id:"flex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex"}},[e._v("#")]),e._v(" flex")]),e._v(" "),a("h3",{attrs:{id:"flex-0-1-auto-是什么意思"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-0-1-auto-是什么意思"}},[e._v("#")]),e._v(" "),a("code",[e._v("flex: 0 1 auto;")]),e._v(" 是什么意思？")]),e._v(" "),a("ul",[a("li",[e._v("flex 这个属性常考题，好好把阮老师的那篇 "),a("strong",[e._v("flex 语法篇")]),e._v("[2]看完 flex 的面试题基本没问题。")]),e._v(" "),a("li",[e._v("flex 语法篇: "),a("em",[e._v("https://www.ruanyifeng.com/blog/2015/07/flex-grammar.html")])])]),e._v(" "),a("h2",{attrs:{id:"less"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#less"}},[e._v("#")]),e._v(" less")]),e._v(" "),a("h3",{attrs:{id:"less-的-代表什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#less-的-代表什么"}},[e._v("#")]),e._v(" less 的&代表什么")]),e._v(" "),a("h2",{attrs:{id:"动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动画"}},[e._v("#")]),e._v(" 动画")]),e._v(" "),a("h3",{attrs:{id:"动画-补间动画实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动画-补间动画实现"}},[e._v("#")]),e._v(" 动画？补间动画实现")]),e._v(" "),a("ul",[a("li",[e._v("补间动画就是指控制最开始的状态和最末的状态的动画，中间的状态由浏览器自动帮我们计算生成")]),e._v(" "),a("li",[e._v("transition动画最主要的属性是transition属性，它其实是4个属性的缩写。")])])])}),[],!1,null,null,null);t.default=s.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{383:function(t,e,r){"use strict";r.r(e);var s=r(42),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"typescript"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#typescript"}},[t._v("#")]),t._v(" typescript")]),t._v(" "),r("ol",[r("li",[t._v("你觉得typescript和javascript有什么区别")]),t._v(" "),r("li",[t._v("typescript你都用过哪些类型")]),t._v(" "),r("li",[t._v("typescript中type和interface的区别")]),t._v(" "),r("li",[t._v("Ts 有什么优势- 讲道理所有现在在网上能查到的优势都是得益于"),r("strong",[t._v("静态语言")]),t._v("的优势。")])]),t._v(" "),r("h2",{attrs:{id:"实现一个-typescript-里的-pick"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#实现一个-typescript-里的-pick"}},[t._v("#")]),t._v(" 实现一个 Typescript 里的 Pick")]),t._v(" "),r("ul",[r("li",[t._v("type Pick<T, K extends keyof T> = { [P in K]: T[P] }")])]),t._v(" "),r("h2",{attrs:{id:"type-和-interface-的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#type-和-interface-的区别"}},[t._v("#")]),t._v(" type 和 interface 的区别")]),t._v(" "),r("ul",[r("li",[t._v("这是一个高频题，如果考察 TS，这应该是最容易考察的，网上也都能查到相关的资料，但是很可能忽略一个点："),r("strong",[t._v("type 只是一个类型别名，并不会产生类型")]),t._v("。所以其实 type 和 interface 其实不是同一个概念，其实他们俩不应该用来比较的，只是有时候用起来看着类似。")])]),t._v(" "),r("h2",{attrs:{id:"ts-实现一个-redux"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ts-实现一个-redux"}},[t._v("#")]),t._v(" ts 实现一个 redux")])])}),[],!1,null,null,null);e.default=a.exports}}]);
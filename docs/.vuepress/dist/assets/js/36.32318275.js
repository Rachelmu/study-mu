(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{373:function(e,t,a){"use strict";a.r(t);var r=a(42),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"react"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[e._v("#")]),e._v(" React")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://react.iamkasong.com/#%E7%AB%A0%E8%8A%82%E8%AF%B4%E6%98%8E",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://react.iamkasong.com/#%E7%AB%A0%E8%8A%82%E8%AF%B4%E6%98%8E"),a("OutboundLink")],1)])]),e._v(" "),a("h2",{attrs:{id:"react-的基本原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-的基本原理"}},[e._v("#")]),e._v(" react 的基本原理")]),e._v(" "),a("ul",[a("li",[e._v("UI = f(state) ，虚拟 DOM、diff 策略、setState")])]),e._v(" "),a("h2",{attrs:{id:"rreact事件机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rreact事件机制"}},[e._v("#")]),e._v(" Rreact事件机制")]),e._v(" "),a("ul",[a("li",[e._v("一文吃透 React 事件机制原理: "),a("em",[e._v("https://toutiao.io/posts/28of14w/preview")])]),e._v(" "),a("li",[e._v("React 为什么要用合成事件")]),e._v(" "),a("li",[e._v("事件机制：注册和分发的过程。这里面至少要说出事件注册都是在元素的最顶层 "),a("code",[e._v("document")]),e._v(" 节点上。")])]),e._v(" "),a("h2",{attrs:{id:"react-vue为什么要在列表组件中写key-作用是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-vue为什么要在列表组件中写key-作用是什么"}},[e._v("#")]),e._v(" React/Vue为什么要在列表组件中写key,作用是什么？")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("key是给每一个vnode(虚拟dom)的唯一id,可以依靠 key ，更"),a("strong",[e._v("准确")]),e._v("，更"),a("strong",[e._v("快")]),e._v("的拿到oldVnode中对应的vnode节点。")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("更准确")])]),e._v(" "),a("p",[e._v("因为有key的存在，避免了就地复用，a.key === b.key的对比中，避免了就地复用情况。")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("更快")])]),e._v(" "),a("p",[e._v("利用key的唯一=key的作用是为了在diff算法执行时更快的找到对应的节点，提高diff速度。")])])]),e._v(" "),a("h2",{attrs:{id:"聊聊-react-的-diff"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聊聊-react-的-diff"}},[e._v("#")]),e._v(" 聊聊 React 的 diff")]),e._v(" "),a("p",[e._v("聊 diff 建议先看看我之前写过的一篇关于虚拟 DOM 的文章："),a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzI1ODk2Mjk0Nw==&mid=2247484879&idx=1&sn=ee0d2e3e235fa911ce2878ae2ea2b676&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[e._v("从 React 历史的长河里聊虚拟 DOM 及其价值"),a("OutboundLink")],1),e._v("，有助于理解 diff 的意义。")]),e._v(" "),a("p",[e._v("diff 的细节可以看我之前写的："),a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzI1ODk2Mjk0Nw==&mid=2247484536&idx=1&sn=94777b8c1aab80dffe1fc224bec02c72&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[e._v("详解 React 16 的 Diff 策略"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"react-优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-优化"}},[e._v("#")]),e._v(" React 优化")]),e._v(" "),a("p",[e._v("可以看之前我写的 "),a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzI1ODk2Mjk0Nw==&mid=2247484774&idx=1&sn=9dc58e54a28755504d58bef49a78f3b4&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[e._v("React 函数式组件性能优化指南"),a("OutboundLink")],1),e._v("，对于类组件也有对应的 API。")]),e._v(" "),a("h2",{attrs:{id:"聊一聊-react-的生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聊一聊-react-的生命周期"}},[e._v("#")]),e._v(" 聊一聊 React 的生命周期")]),e._v(" "),a("ul",[a("li",[e._v("尽量把 React 15 和 16 的进行对比，然后 16 为什么要准备废除那几个生命周期，以及新增的生命周期可以进行替代。")]),e._v(" "),a("li",[e._v("这个图好好的理解一下"),a("img",{attrs:{src:"/Users/mumu/Documents/webExercise/640.jpeg",alt:"640"}})])]),e._v(" "),a("h3",{attrs:{id:"react-16-生命周期有什么改变"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-16-生命周期有什么改变"}},[e._v("#")]),e._v(" react 16 生命周期有什么改变")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("componentWillMount`，`componentWillReceiveProps`，`componentWillUpdate`准备废除，新增了 `static getDerivedStateFromProps` 和 `getSnapshotBeforeUpdate\n")])])]),a("p",[e._v("我还详细的介绍了为什么要用 "),a("code",[e._v("getDerivedStateFromProps")]),e._v(" 来代替即将废除的三个生命周期，主要是 16 版本 render 之前的生命周期可能会被多次执行，具体的可看我的这篇文章："),a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzI1ODk2Mjk0Nw==&mid=2247484469&idx=1&sn=f68d044f1b0e4e2eb981e3878427b75b&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[e._v("Deep In React 之浅谈 React Fiber 架构(一)"),a("OutboundLink")],1)]),e._v(" "),a("h3",{attrs:{id:"getderivedstatefromprops"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getderivedstatefromprops"}},[e._v("#")]),e._v(" getDerivedStateFromProps")]),e._v(" "),a("h2",{attrs:{id:"聊一聊-hooks-怎么处理生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聊一聊-hooks-怎么处理生命周期"}},[e._v("#")]),e._v(" 聊一聊 hooks 怎么处理生命周期")]),e._v(" "),a("ul",[a("li",[e._v("讲道理函数式组件是没有生命周期的，但是如何去模拟类组件的生命周期的作用，都是在 "),a("code",[e._v("useEffect")]),e._v(" 里面进行操作的，因为生命周期里面所做的基本都是副作用，放到 "),a("code",[e._v("useEffect")]),e._v(" 里是最合适的，专门用来处理副作用。")])]),e._v(" "),a("h2",{attrs:{id:"那你聊聊-react-的源码-把你记得起的讲一讲"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#那你聊聊-react-的源码-把你记得起的讲一讲"}},[e._v("#")]),e._v(" 那你聊聊 React 的源码，把你记得起的讲一讲")]),e._v(" "),a("blockquote",[a("p",[e._v("我看过 React 的一部分源码的，所以关于 React 源码更新部分的东西，应该基本都能说个大概。")])]),e._v(" "),a("ul",[a("li",[e._v("FiberNode 有哪些属性")]),e._v(" "),a("li",[e._v("stadeNode 有什么用？")])]),e._v(" "),a("h2",{attrs:{id:"react基础问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react基础问题"}},[e._v("#")]),e._v(" react基础问题")]),e._v(" "),a("h3",{attrs:{id:"react-里有动态加载的-api-吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-里有动态加载的-api-吗"}},[e._v("#")]),e._v(" react 里有动态加载的 api 吗？")]),e._v(" "),a("ul",[a("li",[e._v("React.lazy")])]),e._v(" "),a("h3",{attrs:{id:"react-lazy原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-lazy原理"}},[e._v("#")]),e._v(" React.lazy原理")]),e._v(" "),a("h2",{attrs:{id:"redux-的重点概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redux-的重点概念"}},[e._v("#")]),e._v(" redux 的重点概念")]),e._v(" "),a("ul",[a("li",[e._v("store、reduce、action、actionCreater、dispatch")]),e._v(" "),a("li",[e._v("状态管理常用的是 redux 和 dva，然后再聊了聊区别已经 redux 的理念")])]),e._v(" "),a("h3",{attrs:{id:"实现一个-redux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现一个-redux"}},[e._v("#")]),e._v(" 实现一个 redux")]),e._v(" "),a("ul",[a("li",[e._v("实现 "),a("code",[e._v("createStore")]),e._v(" 的功能，关键点发布订阅的功能，以及取消订阅的功能。")])]),e._v(" "),a("h2",{attrs:{id:"class-组件与函数式组件的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-组件与函数式组件的区别"}},[e._v("#")]),e._v(" class 组件与函数式组件的区别")]),e._v(" "),a("ul",[a("li",[e._v("生命周期、设计理念，感觉这道题比较开发，可以看看 dan 的这篇："),a("strong",[e._v("函数式组件与类组件有何不同？")]),e._v("[3]")]),e._v(" "),a("li",[e._v("函数式组件与类组件有何不同？: "),a("em",[e._v("https://overreacted.io/zh-hans/how-are-function-components-different-from-classes/")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);